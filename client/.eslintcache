[{"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\App.tsx":"1","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\pages\\ViewRecipe.tsx":"2","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\pages\\HomePage.tsx":"3","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\api\\http.ts":"4","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\reportWebVitals.ts":"5","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\app\\store.js":"6","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\app\\recipeSlice.js":"7","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\constants.ts":"8","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\index.tsx":"9","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\pages\\Pages.tsx":"10","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\components\\HomePage\\RecipeItem.tsx":"11","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\components\\ViewRecipes\\ViewRecipeBody.tsx":"12","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\Spinner\\Spinner.tsx":"13","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\functions.ts":"14","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\components\\ViewRecipes\\ViewEditRecipe.tsx":"15","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\Input\\Input.tsx":"16","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\Button\\Button.tsx":"17"},{"size":833,"mtime":1609952852909,"results":"18","hashOfConfig":"19"},{"size":3102,"mtime":1609957313444,"results":"20","hashOfConfig":"19"},{"size":1360,"mtime":1609967149629,"results":"21","hashOfConfig":"19"},{"size":1411,"mtime":1609961835508,"results":"22","hashOfConfig":"19"},{"size":425,"mtime":1608319462307,"results":"23","hashOfConfig":"19"},{"size":184,"mtime":1609888855979,"results":"24","hashOfConfig":"19"},{"size":5708,"mtime":1609967455028,"results":"25","hashOfConfig":"19"},{"size":72,"mtime":1609881533185,"results":"26","hashOfConfig":"19"},{"size":620,"mtime":1609878073428,"results":"27","hashOfConfig":"19"},{"size":118,"mtime":1609875597268,"results":"28","hashOfConfig":"19"},{"size":1959,"mtime":1609970469775,"results":"29","hashOfConfig":"19"},{"size":3807,"mtime":1609970596721,"results":"30","hashOfConfig":"19"},{"size":307,"mtime":1609951882513,"results":"31","hashOfConfig":"19"},{"size":120,"mtime":1609906078957,"results":"32","hashOfConfig":"19"},{"size":4802,"mtime":1609972157057,"results":"33","hashOfConfig":"19"},{"size":994,"mtime":1609954463762,"results":"34","hashOfConfig":"19"},{"size":602,"mtime":1609957083739,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y6bn48",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\App.tsx",[],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\pages\\ViewRecipe.tsx",["75","76"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\pages\\HomePage.tsx",["77","78"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\api\\http.ts",["79"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\reportWebVitals.ts",[],["80","81"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\app\\store.js",[],["82","83"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\app\\recipeSlice.js",["84"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\constants.ts",[],["85","86"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\index.tsx",[],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\pages\\Pages.tsx",[],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\components\\HomePage\\RecipeItem.tsx",["87","88","89","90"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ROOT_URL } from \"../../shared/constants\";\r\nimport { IRecipe } from \"../../types/RecipeType\";\r\nimport \"./RecipeStyle.css\";\r\n\r\ninterface Props {\r\n  recipe: IRecipe;\r\n  fullview?: boolean;\r\n}\r\n\r\nconst RecipeItem: React.FC<Props> = ({ recipe, fullview = false }) => {\r\n  //fullview = view full (single) recipe;\r\n\r\n  const {\r\n    uuid,\r\n    title,\r\n    images,\r\n    description,\r\n    postDate,\r\n    cookTime,\r\n    servings,\r\n    editDate\r\n  } = recipe;\r\n\r\n  const history = useHistory();\r\n\r\n  // Split the dates to get the DATE [0] and TIME [1]\r\n  const splitDate = postDate?.toString().split(\" \");\r\n  const splitEdit = editDate?.toString().split(\" \");\r\n\r\n  return (\r\n    <div className={fullview ? \"item-full-view\": \"item\"} onClick={()=> history.push(`/view/${uuid}`)}>\r\n      <div className=\"image-container\">\r\n        <a href={`${ROOT_URL}${images?.full}`} target=\"_blank\" rel=\"noreferrer\">\r\n          <img\r\n            src={`${ROOT_URL}${images?.small}`}\r\n            alt={title}\r\n            className=\"image-style\"\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"description\">\r\n        <div className=\"title\">\r\n          <strong>{title}</strong>\r\n        </div>\r\n        <div>{description}</div>\r\n        <div className=\"recipe-date\">\r\n          {!fullview && (<div><strong>Post on:</strong> {splitDate && splitDate[0]} <strong>at:</strong>{splitDate && splitDate[1]}</div>)}\r\n        </div>\r\n        <div className=\"cook-time\">\r\n          {!fullview && (\r\n            <>\r\n              <div className=\"item-cook-time\"><strong>Cook time:</strong> {cookTime}</div>\r\n              <div className=\"item-servings\"><strong>Servings: </strong> {servings} Person</div>\r\n            </>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeItem;\r\n","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\components\\ViewRecipes\\ViewRecipeBody.tsx",["91","92","93"],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\Spinner\\Spinner.tsx",[],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\functions.ts",[],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\components\\ViewRecipes\\ViewEditRecipe.tsx",["94","95","96","97","98","99"],"import React, { useEffect, useState } from 'react'\r\nimport Input from '../../shared/Input/Input';\r\nimport RecipeItem from '../HomePage/RecipeItem';\r\nimport Button from '../../shared/Button/Button';\r\nimport { IRecipe } from \"../../types/RecipeType\";\r\nimport {IStore} from '../../types/StoreInterface';\r\nimport { initEditRecipe, resetAllRecipe, resetUpdate } from '../../app/recipeSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\n\r\nimport \"./ViewStyle.css\";\r\n\r\ninterface Props {\r\n  recipe: IRecipe;\r\n}\r\n\r\nconst EditRecipe: React.FC<Props> = ({ recipe }) => {\r\n  const store = useSelector((state: {recipesStore: IStore})=> state.recipesStore);\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, control, errors } = useForm({defaultValues: recipe});\r\n\r\n  const { fields: ingredientsField, append: ingredientsAppend, remove: removeIngredient, append: appendIngredient } = useFieldArray({control, name: \"ingredients\"})\r\n  const { fields: directionsField, append: directionsAppend, remove: removeDirection, append: appendDirection } = useFieldArray({control, name: \"directions\"})\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetAllRecipe()); // Reset the recipe store to reload the new data.\r\n      dispatch(resetUpdate()); // Reset the update statuses.\r\n    }\r\n  }, [])\r\n\r\n  const onSubmit = (data: any) => {\r\n    let id = recipe.uuid\r\n    dispatch(initEditRecipe(id, data))\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <RecipeItem recipe={recipe} fullview={true} />\r\n    <div className=\"view-body\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <h4>Basic List:</h4>\r\n        <Input label={\"Recipe Name\"} name={\"title\"} ref={register()}/>\r\n        <Input label={\"Description\"} name={\"description\"} style={{width: '300px'}} ref={register()}/>\r\n        <Input label={\"Preparation Time\"} name={\"prepTime\"} ref={register()}/>\r\n        <Input label={\"Cook Time\"} name={\"cookTime\"} ref={register()}/>\r\n        <h4>Ingredients List:</h4>\r\n        {ingredientsField.map((i, idx)=>{\r\n          let _idx = idx + 1\r\n          return (\r\n            <div style={{width: '100%', display: 'flex', flexDirection: 'row', alignItems: 'center'}} key={i.uuid}>\r\n              <Input defaultValue={i.uuid} name={`ingredients[${idx}].uuid`} ref={register()} type=\"hidden\"/>\r\n              <Input defaultValue={i.name} label={`Ingredient ${_idx}`} name={`ingredients[${idx}].name`} ref={register({required: true})}/>\r\n              <Input defaultValue={i.measurement} label={`Measurement`} name={`ingredients[${idx}].measurement`} ref={register()} style={{width: '70px'}}/>\r\n              <Input defaultValue={i.amount} label={`Amount`} name={`ingredients[${idx}].amount`} ref={register()} style={{width: '30px'}}/>\r\n              <Button onClick={()=> removeIngredient(idx)} text=\"Remove\">remove</Button>\r\n            </div>\r\n          )\r\n        })}\r\n        <Button onClick={()=> appendIngredient({name: \"\", measurement: \"\", amount: \"\"})} text=\"Add Ingredient\"/ >\r\n        <h4>Directions List:</h4>\r\n        {directionsField.map((d, idx)=>{\r\n          let _idx = idx + 1;\r\n          return (\r\n            <div style={{width: '100%', display: 'flex', flexDirection: 'row', gap: 20}} key={d.instructions}>\r\n              <Input defaultValue={d.instructions} label={`Direction ${_idx}`} name={`directions[${idx}].instructions`} ref={register({required: true})}/>\r\n              <Input label={`Optional`} name={`directions[${idx}].optional`} type={\"checkbox\"} checked={d.optional} ref={register()} style={{margin: '0 auto'}}/>\r\n                <Button onClick={()=> removeDirection(idx)} text=\"remove\">remove</Button>\r\n            </div>\r\n          )\r\n        })}\r\n        <Button onClick={()=> appendDirection({instructions: \"\", optional: false})} text=\"Add Direction\" />\r\n        {store.update_recipe.loading && <div style={{backgroundColor: 'thistle', padding: '5px'}}>Loading...</div>}\r\n        {store.update_recipe.loaded && <div style={{backgroundColor: 'yellowgreen', padding: '5px'}}>Saved</div>}\r\n        {store.update_recipe.error && <div style={{backgroundColor: 'tomato', padding: '5px'}}>An Error Occured</div>}\r\n        <div>\r\n        {errors && errors?.ingredients?.map(i=>{\r\n          if(i && i.name?.type === 'required'){\r\n            return <div className=\"warning\">Ingredient Field can not be empty</div>\r\n          }\r\n        })}\r\n        </div>\r\n        <div>\r\n        {errors && errors?.directions?.map(i=>{\r\n          if(i && i.instructions?.type === 'required'){\r\n            return <div className=\"warning\">Direction Field can not be empty</div>\r\n          }\r\n        })}\r\n        </div>\r\n        <button>Submit?</button>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditRecipe\r\n","C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\Input\\Input.tsx",[],"C:\\webdev\\takehomeassesment\\Crescendo\\client\\src\\shared\\Button\\Button.tsx",[],{"ruleId":"100","severity":1,"message":"101","line":42,"column":6,"nodeType":"102","endLine":42,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":64,"column":6,"nodeType":"102","endLine":64,"endColumn":13,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":20,"nodeType":"108","messageId":"109","endLine":3,"endColumn":34},{"ruleId":"100","severity":1,"message":"110","line":24,"column":6,"nodeType":"102","endLine":24,"endColumn":8,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":17},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":167,"column":13,"nodeType":"108","messageId":"109","endLine":167,"endColumn":20},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"106","severity":1,"message":"123","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"124","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"125","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":21},{"ruleId":"106","severity":1,"message":"126","line":31,"column":9,"nodeType":"108","messageId":"109","endLine":31,"endColumn":18},{"ruleId":"106","severity":1,"message":"127","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"128","line":19,"column":9,"nodeType":"108","messageId":"109","endLine":19,"endColumn":13},{"ruleId":"106","severity":1,"message":"129","line":19,"column":15,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"124","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"130","line":22,"column":45,"nodeType":"108","messageId":"109","endLine":22,"endColumn":62},{"ruleId":"106","severity":1,"message":"131","line":23,"column":44,"nodeType":"108","messageId":"109","endLine":23,"endColumn":60},{"ruleId":"100","severity":1,"message":"132","line":30,"column":6,"nodeType":"102","endLine":30,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":77,"column":46,"nodeType":"136","messageId":"137","endLine":77,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":84,"column":45,"nodeType":"136","messageId":"137","endLine":84,"endColumn":47},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'id', 'store.currentRecipe.error', and 'store.currentRecipe.loaded'. Either include them or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'getSpecialsFromIds'. Either include it or remove the dependency array.",["139"],"@typescript-eslint/no-unused-vars","'resetAllRecipe' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'recipeStore.loaded'. Either include them or remove the dependency array.",["140"],"'IRecipe' is defined but never used.","no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],"no-unused-vars","'recipes' is assigned a value but never used.",["141"],["142"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'splitEdit' is assigned a value but never used.","'getAllSpecials' is defined but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'ingredientsAppend' is assigned a value but never used.","'directionsAppend' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["143"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [dispatch, id, store.currentRecipe.error, store.currentRecipe.loaded]",{"range":"152","text":"153"},"Update the dependencies array to be: [getSpecialsFromIds, store]",{"range":"154","text":"155"},"Update the dependencies array to be: [dispatch, recipeStore.loaded]",{"range":"156","text":"157"},"Update the dependencies array to be: [dispatch]",{"range":"158","text":"159"},[1384,1386],"[dispatch, id, store.currentRecipe.error, store.currentRecipe.loaded]",[1889,1896],"[getSpecialsFromIds, store]",[734,736],"[dispatch, recipeStore.loaded]",[1371,1373],"[dispatch]"]